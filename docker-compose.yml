services:

  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - auth-service
    restart: on-failure
    ports:
      - "9191:9191"
    networks:
      book-lib-net:

  consul:
    image: consul:1.11.11
    container_name: consul
    depends_on:
      - config-server
    restart: on-failure
    ports:
      - "8500:8500"
    networks:
      book-lib-net:

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    restart: on-failure
#    ports:
#      - "8888:8888"
    networks:
      book-lib-net:

  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    depends_on:
      - config-server
    restart: on-failure
#    ports:
#      - "6000:6000"
    networks:
      book-lib-net:

  book-service:
    container_name: book-service
    build:
      context: ./book-service
      dockerfile: Dockerfile
    depends_on:
      - postgres_db
      - mongo_db
    restart: on-failure
#    ports:
#      - "7000:7000"
    networks:
      book-lib-net:

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      - postgresql_user_db
    restart: on-failure
#    ports:
#      - "1000:1000"
    networks:
      book-lib-net:

  postgres_db:
    container_name: postgres_db
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_DB: "book_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1234"
    #    ports:
    #      - "54321:5432"
    networks:
      book-lib-net:

  postgresql_user_db:
    container_name: postgresql_user_db
    image: postgres
    depends_on:
      - config-server
    restart: on-failure
    environment:
      POSTGRES_DB: "user_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1234"
    #    ports:
    #      - "54321:5432"
    networks:
      book-lib-net:

  mongo_db:
    container_name: mongo_db
    image: mongo
    #    ports:
    #      - 27018:27017
    networks:
      book-lib-net:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    depends_on:
      - config-server
    restart: on-failure
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
    networks:
      book-lib-net:

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - config-server
      - zookeeper
    restart: on-failure
    ports:
      - "19092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      book-lib-net:

  mail:
    container_name: mail
    build:
      context: ./mail
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - config-server
      - broker
    networks:
      book-lib-net:

networks:
  book-lib-net:


